

1) 	How many cost units are spent in the entire process of performing
	50 consecutive push operations on an empty array which starts out
	at capacity 8, assuming that the array will double in capacity 
	each time a new item is added to an already full dynamic array? As 
	N (ie. the number of pushes) grows large, under this strategy for
	resizing, what is the average big-o complexity for a push?

	----answer----
	
	Given an array of size 8: 

		arr[8]
	
	The size of the new arrays that will need to be allocated are
	to perform 50 push operations are:	
	
		8, 16, 32, 64
			
	The number of cost units to perform 50 push operations are

		  8 		arr[8]
		  8 + 8 	arr[16]
		  16 + 16	arr[32]
		+ 32 + 18	arr[64]
		  --------
		      106 units of cost	
		
	The average big-o complexity is O(log(n))+.

2)	How many cost units are spent in the entire process of performing
	50 consecutive push operations on an empty array which starts out
	at capacity 8, assuming that the array will grow by a constant 2
	spaces each time a new item is added to an already full dynamic 
	array? As N (ie. the number of pushes) grows large, under this 
	strategy for resizing, what is the average big-o complexity for a
	push?

	----answer----
	
	arr sizes: 
		8,
		[8]+2, [10]+2, [12]+2, [14]+2, [16]+2, [18]+2, [20]+2,
		[22]+2, [24]+2, [26]+2, [28]+2, [30]+2, [32]+2, [34]+2,
		[36]+2, [38]+2, [40]+2, [42]+2, [44]+2, [46]+2, [48]+2,

		The new size of the array is 8 + (2k), where k is 
		the number of arrays created.

		Using sigma notation for 8 + (2k) from k = 0 to 21:

			= 638 units of cost.

		The time complexity is O(n)+
		
